/* ヘッダファイル */
#include "ObjLoaderImpl.h"


//-------------------------------------------------------------
//!
//! @brief モデル
//! @brief モデル関連の名前空間
//!
//-------------------------------------------------------------
namespace Model
{
    //-------------------------------------------------------------
    //!
    //! @brief OBJ
    //! @brief OBJ関連の名前空間
    //!
    //-------------------------------------------------------------
    namespace OBJ
    {
        /*************************************************************//**
         *
         *  @brief  コンストラクタ
         *  @param  なし
         *
         ****************************************************************/
        C_ObjLoader::C_ObjLoader() :

            // 実装情報
            upImpl_(std::make_unique<C_ObjLoaderImpl>())

        {
        }


        /*************************************************************//**
         *
         *  @brief  デストラクタ
         *  @param  なし
         *
         ****************************************************************/
        C_ObjLoader::~C_ObjLoader()
        {
        }


        /*************************************************************//**
         *
         *  @brief  ロード処理を行う
         *  @param  ファイルパス
         *  @return なし
         *
         ****************************************************************/
        void C_ObjLoader::Load(const std::string& rFilePath)
        {
            upImpl_->Load(rFilePath);
        }


        /*************************************************************//**
         *
         *  @brief  解放処理を行う
         *  @param  なし
         *  @return なし
         *
         ****************************************************************/
        void C_ObjLoader::Release()
        {
            upImpl_->Release();
        }


        /*************************************************************//**
         *
         *  @brief  メッシュを取得する
         *  @param  なし
         *  @return メッシュ
         *
         ****************************************************************/
        const S_Mesh& C_ObjLoader::GetMesh() const
        {
            return upImpl_->GetMesh();
        }


        /*************************************************************//**
         *
         *  @brief  マテリアル数を取得する
         *  @param  なし
         *  @return マテリアル数
         *
         ****************************************************************/
        uint32_t C_ObjLoader::GetMaterialCount() const
        {
            return upImpl_->GetMaterialCount();
        }


        /*************************************************************//**
         *
         *  @brief  マテリアルインデックスを取得する
         *  @param  マテリアル名
         *  @return マテリアルインデックス
         *
         ****************************************************************/
        int32_t C_ObjLoader::GetMaterialIndex(const std::string& rName) const
        {
            return upImpl_->GetMaterialIndex(rName);
        }


        /*************************************************************//**
         *
         *  @brief  マテリアルを取得する
         *  @param  マテリアルインデックス
         *  @return マテリアル
         *
         ****************************************************************/
        const S_Material& C_ObjLoader::GetMaterial(int32_t index) const
        {
            return upImpl_->GetMaterial(index);
        }


        /*************************************************************//**
         *
         *  @brief  マテリアルを取得する
         *  @param  マテリアル名
         *  @return マテリアル
         *
         ****************************************************************/
        const S_Material& C_ObjLoader::GetMaterial(const std::string& rName) const
        {
            return upImpl_->GetMaterial(upImpl_->GetMaterialIndex(rName));
        }
    }
}